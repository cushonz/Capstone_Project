class salesPredicter:
    startingMonth = 1
    startingDay = 1
    startingYear = 2012
    data = [0]
    weekdayOffset = 0
    weekdayMod = [0, .4, .5, .8, 1, .8, 0]
    weekdayWeight = .7
    yesterdayWeight = 1.0
    lastyearWeight = 1.0
    effectiveLastyearWeight = 1.0
    weekdayWeight = 1.0

    def predictSales(self, i):
        return round(self.averageSales(i) *
                        self.weigh(i))

    def averageSales(self, i):
        sum = 0
        divBy = 0
        for x in range(1,14):
            if (self.data[i-x] > 0):
                sum += self.data[i-x]
                divBy += 1
        sum /= divBy
        return sum

    def lastYear(self, i):
        if i > 357:
            prevWorkday = 357
            while (self.data[i-prevWorkday] == 0):
                prevWorkday += 1
            if i > prevWorkday:
                return self.data[i-356]/self.data[i-prevWorkday]
            else:
                self.effectiveLastyearWeight = 0
                return 1
        else:
            self.effectiveLastyearWeight = 0
            return 1

    def calcWeekMod():
        pass

    def dayMod(self, i):
        return self.weekdayMod[(i+self.weekdayOffset)%7]

    def train(self):
        pass

    def weigh(self, i):
        total = self.weekdayWeight + self.effectiveLastyearWeight
        if total == 0:
            return 0
        dayAffect = self.dayMod(i) * (self.weekdayWeight/total)
        yearAffect = self.lastYear(i) * (self.effectiveLastyearWeight/total)
        return dayAffect + yearAffect

    def getData(self):
        self.data = [0,1,1,1,1,1,0,
                     0,1,0,1,1,1,0,
                     0,1,1,1,2,1,0,
                     0,1,1,1,1,1,0,
                     0,1,1,2,3,2,0,
                     0,1,2,3,3,3,0,
                     0,1,1,2,2,3,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,1,3,1,0,
                     0,1,1,2,3,2,0,
                     0,1,1,2,3,1,0,
                     0,1,1,1,3,1,0,
                     0,1,1,1,2,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,1,2,1,0,
                     0,1,1,1,2,1,0,
                     0,1,1,1,1,2,0,
                     0,1,1,1,2,1,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,1,0,
                     0,1,1,1,2,1,0,
                     0,0,1,2,2,2,0,
                     0,0,1,1,2,2,0,
                     0,1,1,1,2,1,0,
                     0,0,1,1,1,1,0,
                     0,1,1,2,1,1,0,
                     0,1,1,1,3,2,0,
                     0,1,1,2,2,1,0,
                     0,1,1,2,1,2,0,
                     0,1,1,1,2,1,0,
                     0,1,1,2,2,1,0,
                     0,0,1,1,1,1,0,
                     0,1,1,1,2,1,0,
                     0,0,1,2,2,1,0,
                     0,1,1,1,3,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,1,1,1,0,
                     0,1,1,2,2,1,0,
                     0,1,1,1,3,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,1,3,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,4,3,0,
                     0,1,2,2,4,2,0,
                     0,2,1,3,3,2,0,
                     0,1,2,3,3,2,0,
                     0,1,2,3,4,3,0,
                     0,2,2,3,3,3,0,
                     0,1,1,2,3,2,0,
                     0,1,2,3,3,2,0,
                     0,1,1,3,3,2,0,
                     0,1,1,2,2,1,0,
                     0,1,1,2,2,2,0,
                     0,1,1,1,2,2,0,
                     0,1,1,2,1,2,0,
                     0,1,1,2,4,3,0,
                     0,1,2,4,3,2,0,
                     0,1,2,4,4,4,0,
                     0,2,1,4,3,3,0,
                     0,1,2,3,3,3,0,
                     0,1,2,2,2,3,0,
                     0,1,2,3,4,2,0,
                     0,1,2,2,3,2,0,
                     0,1,2,2,2,3,0,
                     0,1,1,2,2,3,0,
                     0,1,2,2,2,3,0,
                     0,1,1,2,3,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,2,3,1,0,
                     0,1,1,1,2,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,1,3,1,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,1,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,2,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,3,0,
                     0,1,2,1,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,3,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,2,2,3,3,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,3,2,0,
                     0,1,2,2,3,2,0,
                     0,1,2,3,3,2,0,
                     0,1,2,2,2,2,0,
                     0,1,2,2,3,3,0,
                     0,1,2,3,6,3,0,
                     0,2,3,3,6,3,0,
                     0,2,2,3,6,4,0,
                     0,1,2,4,4,3,0,
                     0,2,2,3,4,3,0,
                     0,1,3,2,5,3,0,
                     0,2,3,2,5,3,0,
                     0,2,2,4,4,2,0,
                     0,2,2,4,3,3,0,
                     0,1,1,2,3,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,1,2,2,3,0,
                     0,2,3,3,6,4,0,
                     0,2,3,3,3,4,0,
                     0,2,2,3,6,3,0,
                     0,2,2,3,4,3,0,
                     0,2,2,3,5,3,0,
                     0,2,1,4,5,3,0,
                     0,1,2,2,3,4,0,
                     0,2,1,4,4,3,0,
                     0,2,2,2,2,2,0,
                     0,1,2,2,4,2,0,
                     0,1,2,2,3,2,0,
                     0,1,2,2,3,2,0,
                     0,1,2,2,2,2,0,
                     0,1,2,3,3,2,0,
                     0,1,2,2,3,2,0,
                     0,1,1,2,2,2,0,
                     0,1,2,3,2,2,0,
                     0,1,1,2,2,2,0,
                     0,1,2,2,2,3,0,
                     0,1,2,2,3,2,0,
                     0,1,1,2,4,3,0,
                     0,2,1,3,4,3,0,
                     0,1,1,2,3,3,0,
                     0,1,2,3,3,3,0,
                     0,2,2,3,3,2,0,
                     0,1,2,2,3,3,0,
                     0,1,2,2,2,2,0,
                     0,1,1,2,2,3,0,
                     0,1,2,2,3,2,0,
                     0,1,1,2,3,2,0,
                     0,2,2,2,2,3,0,
                     0,1,2,3,3,3,0,
                     0,1,2,2,3,3,0,
                     0,1,2,2,2,2,0,
                     0,2,1,3,4,3,0,
                     0,2,2,4,4,2,0,
                     0,1,2,3,3,3,0,
                     0,1,1,3,4,3,0,
                     0,2,1,3,4,6,0,
                     0,2,2,5,6,4,0,
                     0,2,3,3,4,5,0,
                     0,2,4,3,7,5,0,
                     0,2,2,6,4,4,0,
                     0,3,3,4,6,4,0,
                     0,2,2,4,5,4,0,
                     0,2,3,4,5,5,0,
                     0,1,2,4,6,3,0,
                     0,1,3]
 

doit = salesPredicter()
doit.getData()
it = []
reallyit = []
wasit = []
for i in range(370, 500):
    it.append(doit.predictSales(i))
    reallyit.append(doit.data[i])
    if i >356:
        wasit.append(doit.data[i-356])
print(it)
print(reallyit)
print(wasit)