<<<<<<< HEAD



=======
>>>>>>> 27c4624928b2be2d9f251529f094d50f44d05738
class salesPredicter:
    data = [0]
    weekdayOffset = 0
    weekdayMod = [0, .3, .5, .8, 1, .8, 0]
    yesterdayWeight = 1.0
    lastyearWeight = 1.0
    effectiveLastyearWeight = .5
    weekdayWeight = 1.0

    def predictSales(self, i):
        return round(self.averageSales(i) *
                    (self.lastYear(i) +
                    self.dayMod(i)/2))

    def averageSales(self, i):
        sum = 0
        divBy = 0
<<<<<<< HEAD
        for x in range(1,10):
=======
        for x in range(1,14):
>>>>>>> 27c4624928b2be2d9f251529f094d50f44d05738
            if (self.data[i-x] > 0):
                sum += self.data[i-x]
                divBy += 1
        sum /= divBy
        return sum

    def lastYear(self, i):
        if i > 357:
            prevWorkday = 357
            while (self.data[i-prevWorkday] == 0):
                prevWorkday += 1
            if i > prevWorkday:
                return self.data[i-356]/self.data[i-prevWorkday]
            else:
                self.effectiveLastyearWeight = 0
                return 1
        else:
            self.effectiveLastyearWeight = 0
            return 1

<<<<<<< HEAD
=======
    def calcWeekMod():
        pass
>>>>>>> 27c4624928b2be2d9f251529f094d50f44d05738

    def dayMod(self, i):
        return self.weekdayMod[(i+self.weekdayOffset)%7]

    def train(self):
        pass

<<<<<<< HEAD
=======
    def weigh(self):
        pass

>>>>>>> 27c4624928b2be2d9f251529f094d50f44d05738
    def getData(self):
        self.data = [1,2,2,2,3,2,1,
                     1,2,1,2,3,2,1,
                     1,2,3,3,4,2,1,
                     1,2,2,2,3,2,1,
                     1,2,3,4,5,4,2,
                     1,3,4,5,4,5,3,
                     2,2,3,2,4,5,2,
                     1,3,2,4,4,3,3,
                     3,2,3,4,3,4,2,
                     2,2,3,2,4,2,1,
                     2,2,3,3,4,4,2,
                     2,2,2,3,5,2,2,
                     1,2,3,2,5,2,1,
                     2,3,3,3,4,4,2,
                     2,2,2,4,5,4,1,
                     2,2,3,3,4,3,2,
                     1,2,3,3,3,3,2,
                     1,2,3,3,2,4,2,
                     2,2,3,2,4,3,1,
                     1,2,3,4,4,4,1,
                     1,3,2,4,3,3,1,
                     2,2,2,3,4,3,2,
                     1,1,2,4,4,4,2,
                     2,1,2,2,4,4,1,
                     2,2,3,2,4,2,1,
                     1,1,3,2,2,3,2,
                     2,3,3,4,2,2,2,
                     2,2,2,2,5,4,2,
                     2,2,2,4,3,2,2,
                     2,2,2,4,2,4,2,
                     1,2,2,3,3,3,2,
                     1,2,3,4,4,3,2,
                     1,1,3,3,2,2,2,
                     1,2,3,3,3,2,2,
                     2,1,3,4,4,3,2,
                     2,3,2,2,5,4,2,
                     1,3,2,4,4,4,2,
                     2,2,3,2,2,3,2,
                     2,3,2,4,3,2,1,
                     2,3,2,2,4,4,2,
                     2,2,3,3,5,4,2,
                     2,3,3,2,4,3,2,
                     1,2,3,4,3,3,1,
                     2,2,2,4,6,4,2,
                     2,2,3,3,5,4,3,
                     3,4,2,5,4,4,2,
                     3,3,3,5,4,3,3,
                     2,2,4,5,5,4,2,
                     2,4,4,5,4,5,2,
                     2,2,2,3,4,3,2,
                     2,3,4,4,4,3,2,
                     3,3,3,5,5,3,3,
                     2,3,2,4,3,2,2,
                     2,2,2,3,3,3,2,
                     1,2,3,3,4,4,2,
                     1,2,3,3,2,3,2,
                     1,3,2,3,6,4,3,
                     2,3,4,5,3,3,2,
                     3,2,3,5,5,5,3,
                     2,4,2,5,3,4,2,
                     3,2,3,4,4,5,2,
                     3,3,4,3,3,5,2,
                     2,3,4,4,5,3,3,
                     2,2,4,3,5,3,3,
                     3,2,4,3,3,4,3,
                     2,3,3,4,4,5,1,
                     2,2,4,2,3,5,1,
                     2,3,3,4,5,2,3,
                     3,3,2,3,4,4,2,
                     3,2,3,3,5,3,1,
                     3,2,3,4,5,2,2,
                     2,3,3,2,3,4,1,
                     2,3,4,4,5,4,2,
                     1,3,2,2,5,2,3,
                     2,2,2,3,4,4,2,
                     3,2,2,4,5,4,1,
                     2,2,3,2,3,4,2,
                     2,2,2,3,3,3,1,
                     3,2,4,2,3,4,3,
                     2,2,2,4,4,4,2,
                     2,3,3,3,3,4,2,
                     1,2,2,3,4,5,2,
                     2,2,4,2,3,4,2,
                     2,2,3,4,3,3,2,
                     1,3,4,4,5,4,3,
                     1,3,3,4,4,4,3,
                     2,3,4,3,3,4,2,
                     2,2,4,4,4,5,2,
                     2,3,3,4,3,3,1,
                     2,3,2,3,3,3,2,
                     3,3,3,4,5,3,1,
                     2,2,4,3,4,3,2,
                     3,2,4,4,4,3,2,
                     3,3,4,3,3,3,3,
                     2,3,4,3,4,4,3,
                     2,2,4,5,6,3,3,
                     2,3,5,4,6,3,2,
                     3,3,3,4,6,6,3,
                     3,2,3,5,4,4,4,
                     4,3,3,3,4,3,3,
                     3,2,5,3,6,5,3,
                     3,4,5,3,6,4,3,
                     3,4,4,5,4,3,2,
                     3,4,3,5,3,5,2,
                     3,3,3,4,5,4,2,
                     2,2,2,4,2,3,2,
                     2,2,3,4,3,4,2,
                     2,2,2,3,2,3,1,
                     2,3,2,4,2,3,2,
                     4,4,5,4,6,6,4,
                     2,3,5,4,3,6,4,
                     2,4,3,4,6,4,3,
                     2,4,3,3,4,5,3,
                     2,4,4,4,6,5,2,
                     2,4,2,5,6,5,2,
                     3,3,3,3,3,5,3,
                     2,4,2,5,5,5,3,
                     2,4,3,4,3,3,3,
                     2,3,4,4,5,3,2,
                     2,3,4,4,4,3,2,
                     3,2,4,4,4,3,2,
                     2,3,4,3,3,3,3,
                     3,4,4,5,5,3,2,
                     3,3,4,4,5,4,3,
                     2,3,2,3,3,4,2,
                     3,4,4,5,3,3,2,
                     2,3,3,3,3,3,3,
                     3,3,4,3,3,5,2,
                     3,3,4,3,4,3,3,
                     2,3,2,4,5,5,2,
                     3,4,2,5,6,5,2,
                     2,2,2,4,4,4,2,
                     3,3,3,4,4,4,2,
                     2,4,3,5,4,4,2,
                     3,2,4,3,4,5,3,
                     3,3,4,3,3,4,3,
                     2,3,2,4,3,5,3,
                     2,4,4,4,5,3,2,
                     2,2,2,3,4,3,2,
                     3,4,4,3,3,4,2,
                     3,3,4,5,4,5,2,
                     3,2,3,3,4,4,3,
                     2,3,4,3,3,4,3,
                     2,4,2,4,4,5,2,
                     2,4,4,5,4,3,2,
                     3,3,4,4,3,4,3,
                     3,3,2,4,4,5,3,
                     3,4,2,5,5,6,4,
                     3,3,3,5,6,4,2,
                     2,4,4,3,4,5,3,
                     2,3,5,3,7,5,4,
                     4,4,3,6,4,4,4,
                     3,5,4,5,6,5,3,
                     2,4,4,5,5,5,2,
                     3,3,5,5,5,6,3,
                     3,2,3,5,6,3,2,
                     3,2,5,]
 

doit = salesPredicter()
doit.getData()
it = []
reallyit = []
wasit = []
for i in range(370, 400):
    it.append(doit.predictSales(i))
    reallyit.append(doit.data[i])
<<<<<<< HEAD
    wasit.append(doit.data[i-356])
=======
    if i >356:
        wasit.append(doit.data[i-356])
>>>>>>> 27c4624928b2be2d9f251529f094d50f44d05738
print(it)
print(reallyit)
print(wasit)